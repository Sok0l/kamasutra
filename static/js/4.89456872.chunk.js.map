{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItem","active","messages","dialog","buttonPrimariRecalor","DialogItem","props","path","concat","id","react_default","a","createElement","className","s","dist","to","name","Message","src","alt","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControl","validate","requiredField","placeholder","types","Dialogs","state","dialogsPage","dialogsElevtyns","dialogsData","map","DialogsItem","key","messagesElement","messeg","Dialogs_Message_Message","isAuth","values","onAddMessage","newMessageBady","react_router_dist","compose","withAuthRedirect","connect","dispatch","addMessageActionCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,OAAA,wBAAAC,qBAAA,uICYHC,EATI,SAACC,GAClB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,OAAS,IAAMW,IAAEb,QACjCS,EAAAC,EAAAC,cAACG,EAAA,EAAO,CAACC,GAAIT,GAAOD,EAAMW,QCOjBC,EAZC,SAACZ,GACf,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,QAChBO,EAAAC,EAAAC,cAAA,OACEO,IAAI,6FACJC,IAAI,QAELd,EAAMe,mDCDPC,EAAeC,YAAiB,KA6ChCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAlBL,SAACnB,GACtB,OACEI,EAAAC,EAAAC,cAAA,QAAMe,SAAUrB,EAAMsB,cACpBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAK,CACJC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BL,KAAK,iBACLiB,YAAY,qBACZC,MAAM,aAGRzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAEV,sBAAsB,mBAUpCgC,EA/CC,SAAC9B,GACf,IAAI+B,EAAQ/B,EAAMgC,YACdC,EAAkBF,EAAMG,YAAYC,IAAI,SAACtC,GAAM,OACjDO,EAAAC,EAAAC,cAAC8B,EAAU,CAACjC,GAAIN,EAAOM,GAAIkC,IAAKxC,EAAOM,GAAIQ,KAAMd,EAAOc,SAGtD2B,EAAkBP,EAAMnC,SAASuC,IAAI,SAACI,GAAM,OAC9CnC,EAAAC,EAAAC,cAACkC,EAAO,CAACzB,QAASwB,EAAOxB,QAASsB,IAAKE,EAAOpC,GAAIA,GAAIoC,EAAOpC,OAO/D,OAAKH,EAAMyC,OAGTrC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,SAChBW,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,aAAcuC,GAChC7B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,UAAW0C,GAC7BlC,EAAAC,EAAAC,cAACY,EAAmB,CAACG,SAVL,SAACqB,GACnB1C,EAAM2C,aAAaD,EAAOE,oBAGFxC,EAAAC,EAAAC,cAACuC,EAAA,EAAQ,CAACnC,GAAI,oCCP3BoC,sBACbC,IACAC,YAdoB,SAACjB,GACrB,MAAO,CAAEC,YAAaD,EAAMC,cAGL,SAACiB,GACxB,MAAO,CACLN,aAAc,SAACC,GACbK,EAASC,YAAwBN,QAKxBE,CAGbhB","file":"static/js/4.89456872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Ef5x\",\"dialogsItem\":\"Dialogs_dialogsItem__3nmsY\",\"active\":\"Dialogs_active__1W43f\",\"messages\":\"Dialogs_messages__jhDul\",\"dialog\":\"Dialogs_dialog__2nFT3\",\"buttonPrimariRecalor\":\"Dialogs_buttonPrimariRecalor__1iAtx\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\n\nconst DialogItem = (props) => {\n  let path = `/dialogs/${props.id}`;\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={s.dialog}>\n      <img\n        src=\"https://decider.com/wp-content/uploads/2020/12/AVA-NETFLIX-REVIEW.jpg?quality=75&strip=all\"\n        alt=\"alt\"\n      />\n      {props.message}\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { FormControl } from \"../../common/Preloader/FormsControls/FormsControls\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElevtyns = state.dialogsData.map((dialog) => (\n    <DialogItem id={dialog.id} key={dialog.id} name={dialog.name} />\n  ));\n\n  let messagesElement = state.messages.map((messeg) => (\n    <Message message={messeg.message} key={messeg.id} id={messeg.id} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.onAddMessage(values.newMessageBady);\n  };\n\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItem}>{dialogsElevtyns}</div>\n      <div className={s.messages}>{messagesElement}</div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        component={FormControl}\n        validate={[requiredField, maxLength100]}\n        name=\"newMessageBady\"\n        placeholder=\"Enter your message\"\n        types=\"textarea\"\n      />\n\n      <div>\n        <button className={s.buttonPrimariRecalor}>Add message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import { addMessageActionCreator } from \"../../redux/dialogs-reduser\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return { dialogsPage: state.dialogsPage };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onAddMessage: (newMessageBady) => {\n      dispatch(addMessageActionCreator(newMessageBady));\n    },\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);\n"],"sourceRoot":""}